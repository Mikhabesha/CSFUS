//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSFUF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CSFUFDB1 : DbContext
    {
        public CSFUFDB1()
            : base("name=CSFUFDB1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EmployeeDB> EmployeeDBs { get; set; }
        public virtual DbSet<WusaneExpert> WusaneExperts { get; set; }
        public virtual DbSet<Approver> Approvers { get; set; }
        public virtual DbSet<ContributionExpert> ContributionExperts { get; set; }
        public virtual DbSet<RegionsDb> RegionsDbs { get; set; }
        public virtual DbSet<DecisionExpertsTask> DecisionExpertsTasks { get; set; }
        public virtual DbSet<DecisionDistro2> DecisionDistro2 { get; set; }
        public virtual DbSet<Decision> Decisions { get; set; }
        public virtual DbSet<CustomerReg> CustomerRegs { get; set; }
        public virtual DbSet<ConReg> ConRegs { get; set; }
        public virtual DbSet<ConExpTask> ConExpTasks { get; set; }
        public virtual DbSet<ApproverTask> ApproverTasks { get; set; }
        public virtual DbSet<PensionType> PensionTypes { get; set; }
        public virtual DbSet<DecisionExpertsTask2> DecisionExpertsTask2 { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<RolesDB> RolesDBs { get; set; }
    
        public virtual ObjectResult<getregistrations_Result> getregistrations(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string eXP)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var eXPParameter = eXP != null ?
                new ObjectParameter("EXP", eXP) :
                new ObjectParameter("EXP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getregistrations_Result>("getregistrations", sTARTParameter, eNDParameter, eXPParameter);
        }
    
        public virtual ObjectResult<CustomerReg> GetDates(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string eXP)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var eXPParameter = eXP != null ?
                new ObjectParameter("EXP", eXP) :
                new ObjectParameter("EXP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("GetDates", sTARTParameter, eNDParameter, eXPParameter);
        }
    
        public virtual ObjectResult<CustomerReg> GetDates(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string eXP, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var eXPParameter = eXP != null ?
                new ObjectParameter("EXP", eXP) :
                new ObjectParameter("EXP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("GetDates", mergeOption, sTARTParameter, eNDParameter, eXPParameter);
        }
    
        public virtual ObjectResult<Procedure_Result> Procedure(Nullable<int> param1, Nullable<int> param2)
        {
            var param1Parameter = param1.HasValue ?
                new ObjectParameter("param1", param1) :
                new ObjectParameter("param1", typeof(int));
    
            var param2Parameter = param2.HasValue ?
                new ObjectParameter("param2", param2) :
                new ObjectParameter("param2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure_Result>("Procedure", param1Parameter, param2Parameter);
        }
    
        public virtual ObjectResult<DecisionDateSearch_Result> DecisionDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionDateSearch_Result>("DecisionDateSearch", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<Decision> DecisionSearchWithDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Decision>("DecisionSearchWithDate", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<Decision> DecisionSearchWithDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Decision>("DecisionSearchWithDate", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ContributionDateSearch_Result> ContributionDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ContributionDateSearch_Result>("ContributionDateSearch", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConReg> ConSearchWithDates(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConReg>("ConSearchWithDates", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConReg> ConSearchWithDates(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConReg>("ConSearchWithDates", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<registrationDDate_Result> registrationDDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<registrationDDate_Result>("registrationDDate", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<CustomerReg> GetDatesOnly(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("GetDatesOnly", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<CustomerReg> GetDatesOnly(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("GetDatesOnly", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionDistro2> DistroDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionDistro2>("DistroDateSearch", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionDistro2> DistroDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionDistro2>("DistroDateSearch", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual int DistroSearchDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DistroSearchDate", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ApprovalDateSearch_Result> ApprovalDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApprovalDateSearch_Result>("ApprovalDateSearch", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ApproverTask> ApproverSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApproverTask>("ApproverSearch", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ApproverTask> ApproverSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ApproverTask>("ApproverSearch", mergeOption, sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionEXPDateSearch_Result> DecisionEXPDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string name, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionEXPDateSearch_Result>("DecisionEXPDateSearch", sTARTParameter, eNDParameter, nameParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionExpertsTask> DecisionEXPDateSearchNew(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string name, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionExpertsTask>("DecisionEXPDateSearchNew", sTARTParameter, eNDParameter, nameParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionExpertsTask> DecisionEXPDateSearchNew(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string name, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionExpertsTask>("DecisionEXPDateSearchNew", mergeOption, sTARTParameter, eNDParameter, nameParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConExpDateSearch_Result> ConExpDateSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpDateSearch_Result>("ConExpDateSearch", sTARTParameter, eNDParameter);
        }
    
        public virtual ObjectResult<ConExpTask> ConExpDateSearchBinded(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpTask>("ConExpDateSearchBinded", sTARTParameter, eNDParameter);
        }
    
        public virtual ObjectResult<ConExpTask> ConExpDateSearchBinded(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpTask>("ConExpDateSearchBinded", mergeOption, sTARTParameter, eNDParameter);
        }
    
        public virtual int PaySearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaySearch", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<Payment> PaySearchD(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Payment>("PaySearchD", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<Payment> PaySearchD(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Payment>("PaySearchD", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DicExp2Search_Result> DicExp2Search(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DicExp2Search_Result>("DicExp2Search", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionExpertsTask2> DicExp2SearchD(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionExpertsTask2>("DicExp2SearchD", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<DecisionExpertsTask2> DicExp2SearchD(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DecisionExpertsTask2>("DicExp2SearchD", mergeOption, sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<CustomerReg> RegSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("RegSearch", sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<CustomerReg> RegSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerReg>("RegSearch", mergeOption, sTARTParameter, eNDParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConExpDateAndNameSearch_Result> ConExpDateAndNameSearch(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpDateAndNameSearch_Result>("ConExpDateAndNameSearch", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConExpTask> ConSearchWithNameAndDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpTask>("ConSearchWithNameAndDate", sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    
        public virtual ObjectResult<ConExpTask> ConSearchWithNameAndDate(Nullable<System.DateTime> sTART, Nullable<System.DateTime> eND, string nAME, string rEGION, MergeOption mergeOption)
        {
            var sTARTParameter = sTART.HasValue ?
                new ObjectParameter("START", sTART) :
                new ObjectParameter("START", typeof(System.DateTime));
    
            var eNDParameter = eND.HasValue ?
                new ObjectParameter("END", eND) :
                new ObjectParameter("END", typeof(System.DateTime));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var rEGIONParameter = rEGION != null ?
                new ObjectParameter("REGION", rEGION) :
                new ObjectParameter("REGION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConExpTask>("ConSearchWithNameAndDate", mergeOption, sTARTParameter, eNDParameter, nAMEParameter, rEGIONParameter);
        }
    }
}
